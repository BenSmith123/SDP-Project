<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
lives_x = 30
hit_alpha = 0

instance_create(x,y,obj_pause_button)

// create on screen buttons
if IS_MOBILE
{
    // left and right
    global.vk_left_x = 40
    global.vk_right_x = 220
    
    global.vk_jump_x = WIDTH-280 // jump
    
    global.vk_y = HEIGHT-160 // y for both left and right keys
    
    // attack 
    global.vk_attack1_x = WIDTH-150
    global.vk_attack1_y = HEIGHT-280
    
    global.vk_size = 140 // size of the virtual key AND sprite (in pixels)

    
    
    // global positions for each virtual key, -(vk_size/2) to center the virtual key on the sprite
    key = instance_create(0,0,obj_arrow_key_left)
    virtual_key = virtual_key_add(global.vk_left_x,global.vk_y,global.vk_size,global.vk_size,ord('A'))
    key.x2 = global.vk_left_x
    key.y2 = global.vk_y
   // virtual_key_show(virtual_key) // debug
    
    
    key = instance_create(0,0,obj_arrow_key_right)
    virtual_key = virtual_key_add(global.vk_right_x,global.vk_y,global.vk_size,global.vk_size,ord('D'))
    key.x2 = global.vk_right_x
    key.y2 = global.vk_y
    // virtual_key_show(virtual_key)
    
   
    key = instance_create(x,y,obj_arrow_key_jump)
    virtual_key = virtual_key_add(global.vk_jump_x,global.vk_y,global.vk_size,global.vk_size,ord('W'))
    key.x2 = global.vk_jump_x
    key.y2 = global.vk_y
    // virtual_key_show(virtual_key)
 
    
    key = instance_create(x,y,obj_arrow_key_attack)
    virtual_key = virtual_key_add(global.vk_attack1_x,global.vk_attack1_y,global.vk_size,global.vk_size,ord('S'))
    key.x2 = global.vk_attack1_x
    key.y2 = global.vk_attack1_y
    // virtual_key_show(virtual_key)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if hit_alpha &gt; 0 
{
    draw_sprite_stretched_ext(spr_hit_effect,0,0,0,WIDTH,HEIGHT,image_blend,hit_alpha)
    hit_alpha -= 0.06
}

scr_text_1()

draw_sprite(spr_hud,0,10,10)

// HEALTH BAR
draw_sprite_part(spr_hud_health_bar,obj_player.health_colour-1,0,0,(obj_player.hp/obj_player.max_hp * 287),31,63,16) // 20 = sprite height // 146 = sprite width
// EXPERIENCE BAR
draw_sprite_part(spr_hud_experience,0,0,0,(global.experience/global.max_exp * 265),18,68,48) // 127 = sprite width




scr_text_2()
draw_text(42,42,global.level) // level

scr_text_4()
draw_set_halign(fa_right)
draw_text(324,30,string(obj_player.hp) +"/" +string(obj_player.max_hp))
draw_text(236,30,global.name +"    [ "+global.class+" ]")

draw_text(230,56,string(global.experience) +"/" +string(global.max_exp)+"   ["+string(global.experience/global.max_exp*100)+"%]")

draw_text(WIDTH-20,64,string(global.current_kills)+ " kills")


// coins
draw_sprite(spr_coin_hud,0,80,120)

draw_text(90,120,global.coins)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
