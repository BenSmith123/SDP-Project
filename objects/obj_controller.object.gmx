<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// debug game controls
if global.user = "GM"
{
    //if global.system = "Windows"
    {
    
        if instance_exists(obj_player)
        {
            if keyboard_check_pressed(ord('Q')) 
            {
                global.experience = global.max_exp
                scr_level_up()
                //obj_player.hp = obj_player.max_hp
            }
            
        
            if IS_WINDOWS
            {
                if mouse_check_button_released(mb_right) 
                {
                    choice = choose(obj_ai_1,obj_ai_3)
                    
                    instance_create(mouse_x,mouse_y,choice)
                }
            }
            
        
            if keyboard_check_pressed(ord('G')) {global.show_debug = !global.show_debug}
            
            if keyboard_check_pressed(ord('V')){global.overall_view = !global.overall_view; room_restart()}
        
        }
        
        if IS_MOBILE
        {
            if keyboard_check_pressed(vk_backspace)
            {
                room_restart()
            }
        }
    
    
    //if keyboard_check_pressed(ord('U')) {scr_save_game()}
    //if keyboard_check_pressed(ord('I')) {scr_load_game()}
    //if keyboard_check_pressed(ord('O')) {scr_reset_game()}
    
    if keyboard_check_pressed(ord('L')) {obj_player.x = mouse_x; obj_player.y = mouse_y}
    
    if keyboard_check_pressed(vk_f1) {show_message(game_info)}
    
    if keyboard_check_pressed(vk_f11) {if room_exists(room_next(room)) room_goto_next()}

    if keyboard_check_pressed(vk_f12) {game_restart()}
    
    if keyboard_check_pressed(vk_escape) {game_end()}
    
    }
}



// instance_deactivate_region(view_xview[0],view_yview[0],WIDTH,HEIGHT,false,true)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set resolution and debug info
set_resolution()

target = 0 // what player to target for the camera

// DEBUG

game_info = "
------------------ CONTROLS ------------------
F11 = go to next level
F12 = reboot game
&lt;SHIFT&gt; = reset game (delete saved progress)

Right Click = spawn random AI (no bosses)

--- PLAYER ---
Left arrow (or A) = move left
Right arrow (or D) = move right
Up arrow (or W) = jump
Down arrow = drop down
Spacebar (or S) = attack
F = teleport (if spellcaster)

--- JOYSTICK ---
Lstick  = move left/right
A = jump
B = attack
Y = teleport
Start = pause game

P = pause
Back (ANDROID) = pause
Escape = close game

Q = level up
V = toggle game view (see entire map)
G = toggle debug mode 
L = move player to mouse (UNSTICK)

1 = show ai detect distance
2 = show ai XYmeeting
3 = show ai main variables
4 = show ai platform variables

"

room_start_messages() // display room messages (if any)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// save the game

scr_save_game()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>non-saved globals/functions</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// game start

scr_particle_system()


global.user = "GM"
global.error = ""
global.show_debug = false
global.overall_view = false // show the entire room

/*
global.system = "" // incase there is no OS type? windows or mobile
global.system_os = "" // winodws, iOS, android

// set either windows or mobile and set the operating system type
if os_type = os_windows {global.system = "Windows"}
if os_type = os_android {global.system = "Mobile"; global.system_os = "Android"}
if os_type = os_ios {global.system = "Mobile"; global.system_os = "iOS"}*/


// in-game variables

global.player_start_x = 0 // set where the player first spawns in the room
global.player_start_y = 0

randomize() // randomize gamemakers seed

display_set_gui_size(WIDTH,HEIGHT)
surface_resize(application_surface,WIDTH,HEIGHT)

// SETTINGS
global.joystick_enabled = true

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>saved globals</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// saved global variables and then try load game


scr_initialize() // initialize all the saved global variables

scr_load_game() // if no save game then these variables aren't overridden



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_game_error_text</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// pause game
scr_pause_game()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_reset_game()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// pause game (android)
/*
if global.system = "Mobile"
{
    scr_pause_game()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
